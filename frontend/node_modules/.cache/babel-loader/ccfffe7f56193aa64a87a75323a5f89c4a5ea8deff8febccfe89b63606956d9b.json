{"ast":null,"code":"import axios from 'axios';\n\n// Base URL for API\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API functions\nconst authAPI = {\n  // Register user\n  register: userData => api.post('/auth/register', userData),\n  // Login user\n  login: credentials => api.post('/auth/login', credentials),\n  // Get user profile\n  getProfile: () => api.get('/auth/profile')\n};\n\n// Application API functions\nexport const applicationAPI = {\n  // Submit application\n  submit: applicationData => api.post('/applications', applicationData),\n  // Get application by ID\n  getById: id => api.get(`/applications/${id}`),\n  // Get user applications\n  getUserApplications: userId => api.get(`/applications/user/${userId}`),\n  // Get all applications (admin)\n  getAll: () => api.get('/applications')\n};\nexport default authAPI;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","userData","post","login","credentials","getProfile","get","applicationAPI","submit","applicationData","getById","id","getUserApplications","userId","getAll"],"sources":["C:/Users/binha/Desktop/again/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base URL for API\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API functions\r\nconst authAPI = {\r\n  // Register user\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  \r\n  // Login user\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  \r\n  // Get user profile\r\n  getProfile: () => api.get('/auth/profile')\r\n};\r\n\r\n// Application API functions\r\nexport const applicationAPI = {\r\n  // Submit application\r\n  submit: (applicationData) => api.post('/applications', applicationData),\r\n  \r\n  // Get application by ID\r\n  getById: (id) => api.get(`/applications/${id}`),\r\n  \r\n  // Get user applications\r\n  getUserApplications: (userId) => api.get(`/applications/user/${userId}`),\r\n  \r\n  // Get all applications (admin)\r\n  getAll: () => api.get('/applications')\r\n};\r\n\r\nexport default authAPI;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,MAAMU,OAAO,GAAG;EACd;EACAC,QAAQ,EAAGC,QAAQ,IAAKxB,GAAG,CAACyB,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;EAE5D;EACAE,KAAK,EAAGC,WAAW,IAAK3B,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAEE,WAAW,CAAC;EAE5D;EACAC,UAAU,EAAEA,CAAA,KAAM5B,GAAG,CAAC6B,GAAG,CAAC,eAAe;AAC3C,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG;EAC5B;EACAC,MAAM,EAAGC,eAAe,IAAKhC,GAAG,CAACyB,IAAI,CAAC,eAAe,EAAEO,eAAe,CAAC;EAEvE;EACAC,OAAO,EAAGC,EAAE,IAAKlC,GAAG,CAAC6B,GAAG,CAAC,iBAAiBK,EAAE,EAAE,CAAC;EAE/C;EACAC,mBAAmB,EAAGC,MAAM,IAAKpC,GAAG,CAAC6B,GAAG,CAAC,sBAAsBO,MAAM,EAAE,CAAC;EAExE;EACAC,MAAM,EAAEA,CAAA,KAAMrC,GAAG,CAAC6B,GAAG,CAAC,eAAe;AACvC,CAAC;AAED,eAAeP,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}